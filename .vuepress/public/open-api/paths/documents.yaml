indexDocument:

  get:

    operationId: indexes.documents.list
    summary: Get Documents
    description: |
      Get [documents](/learn/core_concepts/documents.html) by batch.
    tags:
      - Documents
    security:
      - apiKey: []
    parameters:
      - $ref: ../open-api.yaml#/components/parameters/indexUid
      - $ref: ../open-api.yaml#/components/parameters/limit
      - $ref: ../open-api.yaml#/components/parameters/offset
      - $ref: ../open-api.yaml#/components/parameters/attributesToRetrieve
    responses:
      200:
        description: Ok
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: ../open-api.yaml#/components/schemas/document

  post:

    operationId: indexes.documents.create
    summary: Add or replace documents
    description: |
      Add a list of [documents](/learn/core_concepts/documents.html) or replace them if they already exist. If the provided index does not exist, it will be created.

      If you send an already existing document (same [id](/learn/core_concepts/documents.html#primary-key)) the whole existing document will be overwritten by the new document. Fields previously in the document not present in the new document are removed.

      For a partial update of the document see add or update documents.

      If the provided index does not exist, it will be created.
    tags:
      - Documents
    security:
      - apiKey: []
    parameters:
      - $ref: ../open-api.yaml#/components/parameters/indexUid
      - $ref: ../open-api.yaml#/components/parameters/primaryKey
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../open-api.yaml#/components/schemas/document
    responses:
      202:
        $ref: ../open-api.yaml#/components/responses/202

  put:

    operationId: indexes.documents.upsert
    summary: Add or update documents
    description: |
      Add a list of documents or update them if they already exist. If the provided index does not exist, it will be created.

      If you send an already existing document (same [id](/learn/core_concepts/documents.html#primary-key)) the old document will be only partially updated according to the fields of the new document. Thus, any fields not present in the new document are kept and remained unchanged.

      To completely overwrite a document, check out the add or replace documents route.

      If the provided index does not exist, it will be created.
    tags:
      - Documents
    security:
      - apiKey: []
    parameters:
      - $ref: ../open-api.yaml#/components/parameters/indexUid
      - $ref: ../open-api.yaml#/components/parameters/primaryKey
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../open-api.yaml#/components/schemas/document
    responses:
      202:
        $ref: ../open-api.yaml#/components/responses/202

  delete:

    operationId: indexes.documents.removeAll
    summary: Delete all documents
    description: Delete all documents in the specified index.
    tags:
      - Documents
    security:
      - apiKey: []
    parameters:
      - $ref: ../open-api.yaml#/components/parameters/indexUid
    responses:
      202:
        $ref: ../open-api.yaml#/components/responses/202

indexDocumentDeleteBatch:

  delete:

    operationId: indexes.documents.removeBatch
    summary: Delete documents
    description: Delete a selection of documents based on array of document id's.
    tags:
      - Documents
    security:
      - apiKey: []
    parameters:
      - $ref: ../open-api.yaml#/components/parameters/indexUid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../open-api.yaml#/components/schemas/documentId
    responses:
      202:
        $ref: ../open-api.yaml#/components/responses/202

indexDocumentId:

  get:

    operationId: indexes.documents.get
    summary: Get one document
    description: Get one [document](/learn/core_concepts/documents.html) using its unique id.
    tags:
      - Documents
    security:
      - apiKey: []
    parameters:
      - $ref: ../open-api.yaml#/components/parameters/indexUid
      - $ref: ../open-api.yaml#/components/parameters/documentId
    responses:
      200:
        description: Ok
        content:
          application/json:
            schema:
              $ref: ../open-api.yaml#/components/schemas/document

  delete:

    operationId: indexes.documents.remove
    summary: Delete one document
    description: Delete one document based on its unique id.
    tags:
      - Documents
    security:
      - apiKey: []
    parameters:
      - $ref: ../open-api.yaml#/components/parameters/indexUid
      - $ref: ../open-api.yaml#/components/parameters/documentId
    responses:
      202:
        $ref: ../open-api.yaml#/components/responses/202
